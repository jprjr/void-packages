--- source/Core/ConnectionSharedMemory.cpp.orig	2015-05-07 10:52:36.554392575 +0200
+++ source/Core/ConnectionSharedMemory.cpp	2015-05-07 10:52:51.674373757 +0200
@@ -16,6 +16,7 @@
 #ifdef _WIN32
 #include "lldb/Host/windows/windows.h"
 #else
+#include <fcntl.h>	/* O_RDRW */
 #include <sys/file.h>
 #include <sys/mman.h>
 #include <sys/stat.h>
--- source/Host/common/FileSpec.cpp.orig	2015-05-07 11:12:29.544965335 +0200
+++ source/Host/common/FileSpec.cpp	2015-05-07 11:13:32.999890912 +0200
@@ -14,6 +14,7 @@
 #include "lldb/Host/windows/windows.h"
 #endif
 #include <fcntl.h>
+#include <limits.h>	/* PATH_MAX */
 #ifndef _MSC_VER
 #include <libgen.h>
 #endif
--- source/Plugins/Process/Linux/NativeProcessLinux.cpp.orig	2015-05-07 11:33:00.109509237 +0200
+++ source/Plugins/Process/Linux/NativeProcessLinux.cpp	2015-05-07 11:36:17.726275750 +0200
@@ -68,7 +68,7 @@
 #include "ProcFileReader.h"
 #include "Plugins/Process/POSIX/ProcessPOSIXLog.h"
 
-#ifdef __ANDROID__
+#ifndef __GLIBC__
 #define __ptrace_request int
 #define PT_DETACH PTRACE_DETACH
 #endif
--- source/Plugins/Process/Linux/ProcessMonitor.cpp.orig	2015-05-07 11:48:17.954425191 +0200
+++ source/Plugins/Process/Linux/ProcessMonitor.cpp	2015-05-07 11:48:42.097396679 +0200
@@ -51,7 +51,7 @@
 #include "Plugins/Process/POSIX/ProcessPOSIXLog.h"
 #include "ProcessMonitor.h"
 
-#ifdef __ANDROID__
+#ifndef __GLIBC__
 #define __ptrace_request int
 #define PT_DETACH PTRACE_DETACH
 #endif
--- source/Host/linux/Host.cpp.orig	2015-05-07 11:59:26.524631749 +0200
+++ source/Host/linux/Host.cpp	2015-05-07 12:00:07.852582643 +0200
@@ -14,7 +14,7 @@
 #include <sys/stat.h>
 #include <dirent.h>
 #include <fcntl.h>
-#ifndef __ANDROID__
+#ifdef __GLIBC__
 #include <execinfo.h>
 #endif
 
@@ -380,7 +380,7 @@ Host::GetProcessInfo (lldb::pid_t pid, P
 void
 Host::Backtrace (Stream &strm, uint32_t max_frames)
 {
-#ifndef __ANDROID__
+#ifdef __GLIBC__
     if (max_frames > 0)
     {
         std::vector<void *> frame_buffer (max_frames, NULL);
@@ -395,7 +395,7 @@ Host::Backtrace (Stream &strm, uint32_t
         }
     }
 #else
-    assert(false && "::backtrace() not supported on Android");
+    assert(false && "::backtrace() only supported with glibc");
 #endif
 }
 
--- source/Host/linux/HostThreadLinux.cpp.orig	2015-05-07 12:09:24.855925281 +0200
+++ source/Host/linux/HostThreadLinux.cpp	2015-05-07 12:12:10.495735534 +0200
@@ -30,7 +30,9 @@ HostThreadLinux::HostThreadLinux(lldb::t
 void
 HostThreadLinux::SetName(lldb::thread_t thread, llvm::StringRef name)
 {
+#if defined(__ANDROID__) || defined(__GLIBC__)
     ::pthread_setname_np(thread, name.data());
+#endif
 }
 
 void
